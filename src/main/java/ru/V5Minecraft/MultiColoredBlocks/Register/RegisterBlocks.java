package ru.V5Minecraft.MultiColoredBlocks.Register;

import net.minecraft.block.Block;
import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.block.model.ModelResourceLocation;
import net.minecraft.item.Item;
import net.minecraft.item.ItemBlock;
import net.minecraftforge.fml.common.registry.ForgeRegistries;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;
import ru.V5Minecraft.MultiColoredBlocks.blocks.*;

public class RegisterBlocks {
    public static Block RedPlanks = new Wood("red_planks");
    public static Block LightBluePlanks = new Wood("lightblue_planks");
    public static Block BluePlanks = new Wood("blue_planks");
    public static Block RedOakLog = new Wood("red_oak_log");
    public static Block LightBlueOakLog = new Wood("lightblue_oak_log");
    public static Block BlueOakLog = new Wood("blue_oak_log");
    public static Block GreenOakLog = new Wood("green_oak_log");
    public static Block PurpleOakLog = new Wood("purple_oak_log");
    public static Block YellowOakLog = new Wood("yellow_oak_log");
    public static Block GreenPlanks = new Wood("green_planks");
    public static Block OrangePlanks = new Wood("orange_planks");
    public static Block OrangeOakLog = new Wood("orange_oak_log");
    public static Block BlackWhiteOakLog = new Wood("black_white_oak_log");
    public static Block YellowPlanks = new Wood("yellow_planks");
    public static Block PurplePlanks = new Wood("purple_planks");
    public static Block BlackWhitePlanks = new Wood("black_white_planks");
    public static Block RedFence = new Fence("red_fence");
    public static Block LightBlueFence = new Fence("lightblue_fence");
    public static Block BlueFence = new Fence("blue_fence");
    public static Block GreenFence = new Fence("green_fence");
    public static Block OrangeFence = new Fence("orange_fence");
    public static Block YellowFence = new Fence("yellow_fence");
    public static Block PurpleFence = new Fence("purple_fence");
    public static Block BlackWhiteFence = new Fence("black_white_fence");
    public static Block RedStair = new Stair("red_stair", RedPlanks.getDefaultState());
    public static Block LightBlueStair = new Stair("lightblue_stair", LightBluePlanks.getDefaultState());
    public static Block BlueStair = new Stair("blue_stair", BluePlanks.getDefaultState());
    public static Block GreenStair = new Stair("green_stair", GreenPlanks.getDefaultState());
    public static Block OrangeStair = new Stair("orange_stair", OrangePlanks.getDefaultState());
    public static Block YellowStair = new Stair("yellow_stair", YellowPlanks.getDefaultState());
    public static Block PurpleStair = new Stair("purple_stair", PurplePlanks.getDefaultState());
    public static Block BlackWhiteStair = new Stair("black_white_stair", PurplePlanks.getDefaultState());
    public static Block RedLadder = new Ladder("red_ladder");
    public static Block LightBlueLadder = new Ladder("lightblue_ladder");
    public static Block BlueLadder = new Ladder("blue_ladder");
    public static Block GreenLadder = new Ladder("green_ladder");
    public static Block OrangeLadder = new Ladder("orange_ladder");
    public static Block YellowLadder = new Ladder("yellow_ladder");
    public static Block PurpleLadder = new Ladder("purple_ladder");
    public static Block BlackWhiteLadder = new Ladder("black_white_ladder");
    public static Block RedTrapDoor = new TrapDoor("red_trapdoor");
    public static Block LightBlueTrapDoor = new TrapDoor("lightblue_trapdoor");
    public static Block BlueTrapDoor = new TrapDoor("blue_trapdoor");
    public static Block GreenTrapDoor = new TrapDoor("green_trapdoor");
    public static Block OrangeTrapDoor = new TrapDoor("orange_trapdoor");
    public static Block YellowTrapDoor = new TrapDoor("yellow_trapdoor");
    public static Block PurpleTrapDoor = new TrapDoor("purple_trapdoor");
    public static Block BlackWhiteTrapDoor = new TrapDoor("black_white_trapdoor");
    public static Block RedDoor = new Door("red_wooden_door");
    public static Block LightBlueDoor = new Door("lightblue_wooden_door");
    public static Block BlueDoor = new Door("blue_wooden_door");
    public static Block GreenDoor = new Door("green_wooden_door");
    public static Block OrangeDoor = new Door("orange_wooden_door");
    public static Block YellowDoor = new Door("yellow_wooden_door");
    public static Block PurpleDoor = new Door("purple_wooden_door");
    public static Block BlackWhiteDoor = new Door("black_white_wooden_door");
    public static Block RedIronBars = new IronBars("red_iron_bars");
    public static Block LightBlueIronBars = new IronBars("lightblue_iron_bars");
    public static Block BlueIronBars = new IronBars("blue_iron_bars");
    public static Block GreenIronBars = new IronBars("green_iron_bars");
    public static Block OrangeIronBars = new IronBars("orange_iron_bars");
    public static Block YellowIronBars = new IronBars("yellow_iron_bars");
    public static Block PurpleIronBars = new IronBars("purple_iron_bars");
    public static Block BlackWhiteIronBars = new IronBars("black_white_iron_bars");
    public static Block RedPressurePlate = new PressurePlate("red_pressure_plate");
    public static Block LightBluePressurePlate = new PressurePlate("lightblue_pressure_plate");
    public static Block BluePressurePlate = new PressurePlate("blue_pressure_plate");
    public static Block GreenPressurePlate = new PressurePlate("green_pressure_plate");
    public static Block OrangePressurePlate = new PressurePlate("orange_pressure_plate");
    public static Block YellowPressurePlate = new PressurePlate("yellow_pressure_plate");
    public static Block PurplePressurePlate = new PressurePlate("purple_pressure_plate");
    public static Block BlackWhitePressurePlate = new PressurePlate("black_white_pressure_plate");
    public static Block RedStoneSlab = new StoneSlab("red_stone_slab");
    public static Block LightBlueStoneSlab = new StoneSlab("lightblue_stone_slab");
    public static Block BlueStoneSlab = new StoneSlab("blue_stone_slab");
    public static Block GreenStoneSlab = new StoneSlab("green_stone_slab");
    public static Block OrangeStoneSlab = new StoneSlab("orange_stone_slab");
    public static Block YellowStoneSlab = new StoneSlab("yellow_stone_slab");
    public static Block PurpleStoneSlab = new StoneSlab("purple_stone_slab");
    public static Block RedCraftingTable = new CraftingTable("red_crafting_table");
    public static Block LightBlueCraftingTable = new CraftingTable("lightblue_crafting_table");
    public static Block BlueCraftingTable = new CraftingTable("blue_crafting_table");
    public static Block GreenCraftingTable = new CraftingTable("green_crafting_table");
    public static Block OrangeCraftingTable = new CraftingTable("orange_crafting_table");
    public static Block YellowCraftingTable = new CraftingTable("yellow_crafting_table");
    public static Block PurpleCraftingTable = new CraftingTable("purple_crafting_table");
    public static Block BlackWhiteCraftingTable = new CraftingTable("black_white_crafting_table");
    public static Block RedFurnace = new RedFurnace("red_furnace", false);
    public static Block LightBlueFurnace = new LightBlueFurnace("lightblue_furnace", false);
    public static Block BlueFurnace = new BlueFurnace("blue_furnace", false);
    public static Block GreenFurnace = new GreenFurnace("green_furnace", false);
    public static Block OrangeFurnace = new OrangeFurnace("orange_furnace", false);
    public static Block YellowFurnace = new YellowFurnace("yellow_furnace", false);
    public static Block PurpleFurnace = new PurpleFurnace("purple_furnace", false);
    public static Block RedFurnaceOn = new RedFurnace("redfurnaceon", true);
    public static Block LightBlueFurnaceOn = new LightBlueFurnace("lightbluefurnaceon", true);
    public static Block BlueFurnaceOn = new BlueFurnace("bluefurnaceon", true);
    public static Block GreenFurnaceOn = new GreenFurnace("greenfurnaceon", true);
    public static Block OrangeFurnaceOn = new OrangeFurnace("orangefurnaceon", true);
    public static Block YellowFurnaceOn = new YellowFurnace("yellowfurnaceon", true);
    public static Block PurpleFurnaceOn = new PurpleFurnace("purplefurnaceon", true);

    public static void register() {
        setRegister(RedPlanks);
        setRegister(LightBluePlanks);
        setRegister(RedOakLog);
        setRegister(LightBlueOakLog);
        setRegister(BluePlanks);
        setRegister(BlueOakLog);
        setRegister(GreenOakLog);
        setRegister(PurpleOakLog);
        setRegister(YellowOakLog);
        setRegister(GreenPlanks);
        setRegister(OrangePlanks);
        setRegister(OrangeOakLog);
        setRegister(BlackWhiteOakLog);
        setRegister(YellowPlanks);
        setRegister(PurplePlanks);
        setRegister(BlackWhitePlanks);
        setRegister(RedFence);
        setRegister(LightBlueFence);
        setRegister(BlueFence);
        setRegister(GreenFence);
        setRegister(OrangeFence);
        setRegister(YellowFence);
        setRegister(PurpleFence);
        setRegister(BlackWhiteFence);
        setRegister(RedStair);
        setRegister(LightBlueStair);
        setRegister(BlueStair);
        setRegister(GreenStair);
        setRegister(OrangeStair);
        setRegister(YellowStair);
        setRegister(PurpleStair);
        setRegister(BlackWhiteStair);
        setRegister(RedLadder);
        setRegister(LightBlueLadder);
        setRegister(BlueLadder);
        setRegister(GreenLadder);
        setRegister(OrangeLadder);
        setRegister(YellowLadder);
        setRegister(PurpleLadder);
        setRegister(BlackWhiteLadder);
        setRegister(RedTrapDoor);
        setRegister(LightBlueTrapDoor);
        setRegister(BlueTrapDoor);
        setRegister(GreenTrapDoor);
        setRegister(OrangeTrapDoor);
        setRegister(YellowTrapDoor);
        setRegister(PurpleTrapDoor);
        setRegister(BlackWhiteTrapDoor);
        setRegister(RedDoor);
        setRegister(LightBlueDoor);
        setRegister(BlueDoor);
        setRegister(GreenDoor);
        setRegister(OrangeDoor);
        setRegister(YellowDoor);
        setRegister(PurpleDoor);
        setRegister(BlackWhiteDoor);
        setRegister(RedIronBars);
        setRegister(LightBlueIronBars);
        setRegister(BlueIronBars);
        setRegister(GreenIronBars);
        setRegister(OrangeIronBars);
        setRegister(YellowIronBars);
        setRegister(PurpleIronBars);
        setRegister(BlackWhiteIronBars);
        setRegister(RedPressurePlate);
        setRegister(LightBluePressurePlate);
        setRegister(BluePressurePlate);
        setRegister(GreenPressurePlate);
        setRegister(OrangePressurePlate);
        setRegister(YellowPressurePlate);
        setRegister(PurplePressurePlate);
        setRegister(BlackWhitePressurePlate);
        setRegister(RedStoneSlab);
        setRegister(LightBlueStoneSlab);
        setRegister(BlueStoneSlab);
        setRegister(GreenStoneSlab);
        setRegister(OrangeStoneSlab);
        setRegister(YellowStoneSlab);
        setRegister(PurpleStoneSlab);
        setRegister(RedCraftingTable);
        setRegister(LightBlueCraftingTable);
        setRegister(BlueCraftingTable);
        setRegister(GreenCraftingTable);
        setRegister(OrangeCraftingTable);
        setRegister(YellowCraftingTable);
        setRegister(PurpleCraftingTable);
        setRegister(BlackWhiteCraftingTable);
        setRegister(RedFurnace);
        setRegister(LightBlueFurnace);
        setRegister(BlueFurnace);
        setRegister(GreenFurnace);
        setRegister(OrangeFurnace);
        setRegister(YellowFurnace);
        setRegister(PurpleFurnace);
        setRegister(RedFurnaceOn);
        setRegister(LightBlueFurnaceOn);
        setRegister(BlueFurnaceOn);
        setRegister(GreenFurnaceOn);
        setRegister(OrangeFurnaceOn);
        setRegister(YellowFurnaceOn);
        setRegister(PurpleFurnaceOn);
    }

    @SideOnly(Side.CLIENT)
    public static void registerRender() {
        setRender(RedPlanks);
        setRender(LightBluePlanks);
        setRender(RedOakLog);
        setRender(LightBlueOakLog);
        setRender(BluePlanks);
        setRender(BlueOakLog);
        setRender(GreenOakLog);
        setRender(PurpleOakLog);
        setRender(YellowOakLog);
        setRender(GreenPlanks);
        setRender(OrangePlanks);
        setRender(OrangeOakLog);
        setRender(BlackWhiteOakLog);
        setRender(YellowPlanks);
        setRender(PurplePlanks);
        setRender(BlackWhitePlanks);
        setRender(RedFence);
        setRender(LightBlueFence);
        setRender(BlueFence);
        setRender(GreenFence);
        setRender(OrangeFence);
        setRender(YellowFence);
        setRender(PurpleFence);
        setRender(BlackWhiteFence);
        setRender(RedStair);
        setRender(LightBlueStair);
        setRender(BlueStair);
        setRender(GreenStair);
        setRender(OrangeStair);
        setRender(YellowStair);
        setRender(PurpleStair);
        setRender(BlackWhiteStair);
        setRender(RedLadder);
        setRender(LightBlueLadder);
        setRender(BlueLadder);
        setRender(GreenLadder);
        setRender(OrangeLadder);
        setRender(YellowLadder);
        setRender(PurpleLadder);
        setRender(BlackWhiteLadder);
        setRender(RedTrapDoor);
        setRender(LightBlueTrapDoor);
        setRender(BlueTrapDoor);
        setRender(GreenTrapDoor);
        setRender(OrangeTrapDoor);
        setRender(YellowTrapDoor);
        setRender(PurpleTrapDoor);
        setRender(BlackWhiteTrapDoor);
        setRender(RedDoor);
        setRender(LightBlueDoor);
        setRender(BlueDoor);
        setRender(GreenDoor);
        setRender(OrangeDoor);
        setRender(YellowDoor);
        setRender(PurpleDoor);
        setRender(BlackWhiteDoor);
        setRender(RedIronBars);
        setRender(LightBlueIronBars);
        setRender(BlueIronBars);
        setRender(GreenIronBars);
        setRender(OrangeIronBars);
        setRender(YellowIronBars);
        setRender(PurpleIronBars);
        setRender(BlackWhiteIronBars);
        setRender(RedPressurePlate);
        setRender(LightBluePressurePlate);
        setRender(BluePressurePlate);
        setRender(GreenPressurePlate);
        setRender(OrangePressurePlate);
        setRender(YellowPressurePlate);
        setRender(PurplePressurePlate);
        setRender(BlackWhitePressurePlate);
        setRender(RedStoneSlab);
        setRender(LightBlueStoneSlab);
        setRender(BlueStoneSlab);
        setRender(GreenStoneSlab);
        setRender(OrangeStoneSlab);
        setRender(YellowStoneSlab);
        setRender(PurpleStoneSlab);
        setRender(RedCraftingTable);
        setRender(LightBlueCraftingTable);
        setRender(BlueCraftingTable);
        setRender(GreenCraftingTable);
        setRender(OrangeCraftingTable);
        setRender(YellowCraftingTable);
        setRender(PurpleCraftingTable);
        setRender(BlackWhiteCraftingTable);
        setRender(RedFurnace);
        setRender(LightBlueFurnace);
        setRender(BlueFurnace);
        setRender(GreenFurnace);
        setRender(OrangeFurnace);
        setRender(YellowFurnace);
        setRender(PurpleFurnace);
        setRender(RedFurnaceOn);
        setRender(LightBlueFurnaceOn);
        setRender(BlueFurnaceOn);
        setRender(GreenFurnaceOn);
        setRender(OrangeFurnaceOn);
        setRender(YellowFurnaceOn);
        setRender(PurpleFurnaceOn);
    }

    private static void setRegister(Block block) {
        ForgeRegistries.BLOCKS.register(block);
        ForgeRegistries.ITEMS.register(new ItemBlock(block).setRegistryName(block.getRegistryName()));
    }

    @SideOnly(Side.CLIENT)
    private static void setRender(Block block) {
        Minecraft.getMinecraft().getRenderItem().getItemModelMesher().register(Item.getItemFromBlock(block), 0, new ModelResourceLocation(block.getRegistryName(), "inventory"));
    }
}
